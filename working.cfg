65
gt
BOF
EOF
comma
lt
extends
r_brace
return
void
break
character_literal
import
mod
instanceof
lteq
div
identifier
bit_and
decimal_integer_literal
static
eq
string_literal
for
t_super
new
public
neq
complement
interface
byte
package
plus
or
private
boolean
final
r_parenthese
else
true
this
while
protected
minus
and
l_parenthese
false
semicolon
gteq
int
abstract
char
null
if
native
star
bit_or
r_bracket
bit_xor
class
implements
short
l_brace
assign
l_bracket
dot
113
expression_statement
variable_declarators
explicit_constructor_invocation
boolean_literal
import_declaration
modifiers
numeric_type
inclusive_or_expression
while_statement
statement_expression
params
for_statement
local_variable_declaration_statement
compilation_unit
null_literal
abstract_method
class_instance_creation_expression
static_initializer
name
if_then_else_statement_no_short_if
variable
conditional_and_expression
constructor_declarator
interface_declaration
unary_expression
interface_type
left_hand_side
unary_expression_not_plus_minus
class_or_interface_type
assignment_expression
interface_member_declaration
array_access
package_declaration
reference_type
variable_declarator
argument_list
assignment
interface_type_list
conditional_or_expression
multiplicative_expression
field_access
constructor_body
class_type
interfaces
statement_without_trailing_substatement
for_update
statement_expression_list
array_type
single_type_import_declaration
primary_no_new_array
dims
class_member_declaration
interface_body
assignment_operator
expression
block
if_then_else_statement
class_body_declaration_star
exclusive_or_expression
primary
for_init
block_statement_plus
if_then_statement
array_creation_expression
extends_interfaces
additive_expression
simple_name
method
block_statement
shift_expression
primitive_type
literal
class_body_declaration
variable_initializer
statement
method_invocation
type
relational_expression
qualified_name
class_body
equality_expression
star_import
method_header
empty_statement
field
local_variable_declaration
modifier
type_declaration_star
type_declaration
p_super
and_expression
block_statement_star
dim_expr
cast_expression
postfix_expression
return_statement
while_statement_no_short_if
imports
variable_initializers
class_type_list
for_statement_no_short_if
method_body
interface_member_declaration_star
integral_type
statement_no_short_if
integer_literal
array_initializer
param
class_declaration
conditional_expression
method_declarator
constructor_declaration
goal
goal
257
goal BOF compilation_unit EOF
literal integer_literal
literal boolean_literal
literal character_literal
literal string_literal
literal null_literal
type primitive_type
type reference_type
primitive_type numeric_type
primitive_type boolean
numeric_type integral_type
integral_type byte
integral_type short
integral_type int
integral_type char
reference_type class_or_interface_type
reference_type array_type
class_or_interface_type name
class_type class_or_interface_type
interface_type class_or_interface_type
array_type primitive_type dims
array_type name dims
name simple_name
name qualified_name
simple_name identifier
qualified_name name dot identifier
compilation_unit package_declaration imports type_declaration_star
compilation_unit package_declaration type_declaration_star
compilation_unit package_declaration imports
compilation_unit package_declaration
compilation_unit imports type_declaration
compilation_unit type_declaration_star
compilation_unit imports
package_declaration package name semicolon
import_declaration single_type_import_declaration
import_declaration star_import
single_type_import_declaration import name semicolon
star_import import name dot star semicolon
type_declaration class_declaration
type_declaration interface_declaration
type_declaration semicolon
modifier public
modifier protected
modifier private
modifier static
modifier abstract
modifier final
modifier native
class_declaration modifiers class identifier p_super interfaces class_body
class_declaration class identifier p_super interfaces class_body
class_declaration modifiers class identifier p_super class_body
class_declaration class identifier p_super class_body
class_declaration modifiers class identifier interfaces class_body
class_declaration class identifier interfaces class_body
class_declaration modifiers class identifier class_body
class_declaration class identifier class_body
p_super extends class_type
interfaces implements interface_type_list
interface_type_list interface_type
interface_type_list interface_type_list comma interface_type
class_body l_brace class_body_declaration_star r_brace
class_body l_brace r_brace
class_body_declaration class_member_declaration
class_body_declaration static_initializer
class_body_declaration constructor_declaration
class_member_declaration field
class_member_declaration method
class_member_declaration interface_declaration
class_member_declaration semicolon
field modifiers type variable_declarators semicolon
field type variable_declarators semicolon
variable_declarators variable_declarator
variable_declarator variable
variable_declarator variable assign variable_initializer
variable identifier
variable_initializer expression
method method_header method_body
method_header modifiers type method_declarator
method_header type method_declarator
method_header modifiers void method_declarator
method_header void method_declarator
method_declarator identifier l_parenthese params r_parenthese
method_declarator identifier l_parenthese r_parenthese
method_declarator method_declarator l_bracket r_bracket
params param
params params comma param
param modifiers type variable
param type variable
class_type_list class_type
class_type_list class_type_list comma class_type
method_body block
method_body semicolon
constructor_declarator simple_name l_parenthese params r_parenthese
constructor_body l_brace explicit_constructor_invocation block_statement_star r_brace
constructor_body l_brace explicit_constructor_invocation r_brace
interface_declaration modifiers interface identifier extends_interfaces interface_body
interface_declaration interface identifier extends_interfaces interface_body
constructor_declaration modifiers constructor_declarator constructor_body
constructor_declaration constructor_declarator constructor_body
constructor_declarator simple_name l_parenthese r_parenthese
constructor_body l_brace block_statement_star r_brace
constructor_body l_brace r_brace
explicit_constructor_invocation primary dot t_super l_parenthese r_parenthese semicolon
explicit_constructor_invocation primary dot t_super l_parenthese argument_list r_parenthese semicolon
interface_declaration modifiers interface identifier interface_body
interface_declaration interface identifier interface_body
extends_interfaces extends interface_type
extends_interfaces extends_interfaces comma interface_type
interface_body l_brace interface_member_declaration_star r_brace
interface_body l_brace r_brace
interface_member_declaration abstract_method
interface_member_declaration semicolon
abstract_method method_header semicolon
variable_initializers variable_initializer
variable_initializers variable_initializers comma variable_initializer
block l_brace block_statement_star r_brace
block l_brace r_brace
block_statement local_variable_declaration_statement
block_statement statement
block_statement class_declaration
local_variable_declaration_statement local_variable_declaration semicolon
local_variable_declaration modifiers type variable_declarators
local_variable_declaration type variable_declarators
statement statement_without_trailing_substatement
statement if_then_statement
statement if_then_else_statement
statement while_statement
statement for_statement
statement_no_short_if statement_without_trailing_substatement
statement_no_short_if if_then_else_statement_no_short_if
statement_no_short_if while_statement_no_short_if
statement_no_short_if for_statement_no_short_if
statement_without_trailing_substatement block
statement_without_trailing_substatement empty_statement
statement_without_trailing_substatement expression_statement
statement_without_trailing_substatement return_statement
empty_statement semicolon
expression_statement statement_expression semicolon
statement_expression assignment
statement_expression method_invocation
statement_expression class_instance_creation_expression
if_then_statement if l_parenthese expression r_parenthese statement
if_then_else_statement if l_parenthese expression r_parenthese statement_no_short_if else statement
if_then_else_statement_no_short_if if l_parenthese expression r_parenthese statement_no_short_if else statement_no_short_if
while_statement while l_parenthese expression r_parenthese statement
while_statement_no_short_if while l_parenthese expression r_parenthese statement_no_short_if
for_statement for l_parenthese for_init semicolon expression semicolon for_update r_parenthese statement
for_statement for l_parenthese for_init semicolon expression semicolon r_parenthese statement
for_statement for l_parenthese for_init semicolon semicolon for_update r_parenthese statement
for_statement for l_parenthese semicolon expression semicolon for_update r_parenthese statement
for_statement for l_parenthese for_init semicolon semicolon r_parenthese statement
for_statement for l_parenthese semicolon expression semicolon r_parenthese statement
for_statement for l_parenthese semicolon semicolon for_update r_parenthese statement
for_statement for l_parenthese semicolon semicolon r_parenthese statement
for_statement_no_short_if for l_parenthese for_init semicolon expression semicolon for_update r_parenthese statement_no_short_if
for_statement_no_short_if for l_parenthese for_init semicolon expression semicolon r_parenthese statement_no_short_if
for_statement_no_short_if for l_parenthese for_init semicolon semicolon for_update r_parenthese statement_no_short_if
for_statement_no_short_if for l_parenthese semicolon expression semicolon for_update r_parenthese statement_no_short_if
for_statement_no_short_if for l_parenthese for_init semicolon semicolon r_parenthese statement_no_short_if
for_statement_no_short_if for l_parenthese semicolon expression semicolon r_parenthese statement_no_short_if
for_statement_no_short_if for l_parenthese semicolon semicolon for_update r_parenthese statement_no_short_if
for_statement_no_short_if for l_parenthese semicolon semicolon r_parenthese statement_no_short_if
for_init statement_expression
for_init local_variable_declaration
for_update statement_expression
statement_expression_list statement_expression
statement_expression_list statement_expression_list comma statement_expression
return_statement return expression semicolon
return_statement return semicolon
primary primary_no_new_array
primary array_creation_expression
primary_no_new_array literal
primary_no_new_array this
primary_no_new_array l_parenthese expression r_parenthese
primary_no_new_array class_instance_creation_expression
primary_no_new_array field_access
primary_no_new_array method_invocation
primary_no_new_array array_access
class_instance_creation_expression new name l_parenthese argument_list r_parenthese
class_instance_creation_expression new name l_parenthese r_parenthese
argument_list expression
argument_list argument_list comma expression
array_creation_expression new primitive_type dim_expr
array_creation_expression new class_or_interface_type dim_expr
dim_expr l_bracket expression r_bracket
dims l_bracket r_bracket
field_access primary dot identifier
field_access t_super dot identifier
method_invocation name l_parenthese argument_list r_parenthese
method_invocation name l_parenthese r_parenthese
method_invocation primary dot identifier l_parenthese argument_list r_parenthese
method_invocation primary dot identifier l_parenthese r_parenthese
array_access name l_bracket expression r_bracket
array_access primary_no_new_array l_bracket expression r_bracket
postfix_expression primary
postfix_expression name
unary_expression minus unary_expression
unary_expression unary_expression_not_plus_minus
unary_expression_not_plus_minus postfix_expression
unary_expression_not_plus_minus complement unary_expression
unary_expression_not_plus_minus cast_expression
cast_expression l_parenthese name dims r_parenthese unary_expression_not_plus_minus
cast_expression l_parenthese expression r_parenthese unary_expression_not_plus_minus
cast_expression l_parenthese primitive_type dims r_parenthese unary_expression
cast_expression l_parenthese primitive_type r_parenthese unary_expression
multiplicative_expression unary_expression
multiplicative_expression multiplicative_expression star unary_expression
multiplicative_expression multiplicative_expression div unary_expression
multiplicative_expression multiplicative_expression mod unary_expression
additive_expression multiplicative_expression
additive_expression additive_expression plus multiplicative_expression
additive_expression additive_expression minus multiplicative_expression
shift_expression additive_expression
relational_expression shift_expression
relational_expression relational_expression lt shift_expression
relational_expression relational_expression gt shift_expression
relational_expression relational_expression lteq shift_expression
relational_expression relational_expression gteq shift_expression
relational_expression relational_expression instanceof reference_type
equality_expression relational_expression
equality_expression equality_expression eq relational_expression
equality_expression equality_expression neq relational_expression
and_expression equality_expression
and_expression and_expression bit_and equality_expression
exclusive_or_expression and_expression
exclusive_or_expression exclusive_or_expression bit_xor and_expression
inclusive_or_expression exclusive_or_expression
inclusive_or_expression inclusive_or_expression bit_or exclusive_or_expression
conditional_and_expression inclusive_or_expression
conditional_and_expression conditional_and_expression and inclusive_or_expression
conditional_or_expression conditional_and_expression
conditional_or_expression conditional_or_expression or conditional_and_expression
conditional_expression conditional_or_expression
assignment_expression conditional_expression
assignment_expression assignment
assignment left_hand_side assignment_operator assignment_expression
left_hand_side name
left_hand_side field_access
left_hand_side array_access
assignment_operator assign
expression assignment_expression
boolean_literal true
boolean_literal false
null_literal null
integer_literal decimal_integer_literal
interface_member_declaration_star interface_member_declaration_star interface_member_declaration
interface_member_declaration_star interface_member_declaration
block_statement_star block_statement_star block_statement
block_statement_star block_statement
type_declaration_star type_declaration_star type_declaration
type_declaration_star type_declaration
class_body_declaration_star class_body_declaration_star class_body_declaration
class_body_declaration_star class_body_declaration
imports imports import_declaration
imports import_declaration
modifiers modifiers modifier
modifiers modifier
